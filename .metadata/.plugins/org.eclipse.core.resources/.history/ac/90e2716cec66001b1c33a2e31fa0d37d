package application;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.mysql.jdbc.PreparedStatement;

public class DBInfo {

	public static Connection getConnection() {

		Connection con = null;

		try {
			Class.forName("com.mysql.jdbc.Driver");
			String url = "jdbc:mysql://localhost/company";
			con = (Connection) DriverManager.getConnection(url, "naoufel", "naoufel"); //// An revoir
			System.out.println("connected");

		} catch (ClassNotFoundException | SQLException e) {
			e.printStackTrace();
		}

		return con;

	}

	// private String contract_start;
	// private String contract_end;
	// private String nationality;

	public static int save(Employee emp) {

		int st = 0;

		try {
			String sql = "INSERT INTO employee(fname,lname,salary,age,department,address,date_of_birth,gender,education,contract_start,contract_end,nationality) values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

			Connection con = DBInfo.getConnection();
			PreparedStatement preparedStatement = (PreparedStatement) con.prepareStatement(sql);
			preparedStatement.setString(1, emp.getFname());
			preparedStatement.setString(2, emp.getLname());
			preparedStatement.setFloat(3, emp.getSalary());
			preparedStatement.setInt(4, emp.getAge());
			preparedStatement.setString(5, emp.getDepartment());
			preparedStatement.setString(6, emp.getAddress());
			preparedStatement.setString(7, emp.getDate_of_birth());
			preparedStatement.setString(8, emp.getGender());
			preparedStatement.setString(9, emp.getEducation());
			preparedStatement.setString(10, emp.getContract_start());
			preparedStatement.setString(11, emp.getContract_end());
			preparedStatement.setString(12, emp.getNationality());

			st = preparedStatement.executeUpdate();

			con.close();

		} catch (SQLException e) {

			e.printStackTrace();
		}

		return st;

	}

	public static int update(Employee emp) {

		int st = 0;

		try {

			String sql = "UPDATE employee(fname,lname,salary,age,departement,address,date_of_birth,gender,education,contract_start,contract_end,nationality)";
			 //String query = "update users set num_points = ? where first_name = ?";
			Connection con = DBInfo.getConnection();
			PreparedStatement preparedStatement = (PreparedStatement) con.prepareStatement(sql);
			preparedStatement.setString(1, emp.getFname());
			preparedStatement.setString(2, emp.getLname());
			preparedStatement.setFloat(3, emp.getSalary());
			preparedStatement.setInt(4, emp.getAge());
			preparedStatement.setString(5, emp.getDepartment());
			preparedStatement.setString(6, emp.getAddress());
			preparedStatement.setString(7, emp.getDate_of_birth());
			preparedStatement.setString(8, emp.getGender());
			preparedStatement.setString(9, emp.getEducation());
			preparedStatement.setString(10, emp.getContract_start());
			preparedStatement.setString(11, emp.getContract_end());
			preparedStatement.setString(12, emp.getNationality());

			st = preparedStatement.executeUpdate();

			con.close();

		} catch (SQLException e) {

			e.printStackTrace();
		}
		return st;
	}

	public static int delete(int id) {

		int st = 0;

		try {
			String sql = "DELETE FROM employee WHERE id=?";
			Connection con = DBInfo.getConnection();
			PreparedStatement preparedStatement = (PreparedStatement) con.prepareStatement(sql);
			preparedStatement.setInt(1, id);

			st = preparedStatement.executeUpdate();

			con.close();

		} catch (SQLException e) {

			e.printStackTrace();
		}
		return st;

	}

	public static Employee getEmployeeId(int id) {

		Employee emp = new Employee();
		try {
			String sql = "SELECT FROM employee WHERE id=?";
			Connection con = DBInfo.getConnection();
			PreparedStatement preparedStatement = (PreparedStatement) con.prepareStatement(sql);

			preparedStatement.setInt(1, id);

			ResultSet resultSet = preparedStatement.executeQuery();

			if (resultSet.next()) {

				emp.setId(resultSet.getInt(1));
				emp.setFname(resultSet.getString(2));
				emp.setLname(resultSet.getString(3));
				emp.setSalary(resultSet.getFloat(4));
				emp.setAge(resultSet.getInt(5));
				emp.setDepartment(resultSet.getString(6));
				emp.setAddress(resultSet.getString(7));
				emp.setDate_of_birth(resultSet.getString(8));
				emp.setGender(resultSet.getString(9));
				emp.setEducation(resultSet.getString(10));
				emp.setContract_start(resultSet.getString(11));
				emp.setContract_end(resultSet.getString(12));
				emp.setNationality(resultSet.getString(13));

			}

			con.close();

		} catch (SQLException e) {

			e.printStackTrace();
		}
		return emp;

	}

	public static List<Employee> getEmployee() {

		List<Employee> list = new ArrayList<Employee>();

		try {
			String sql = "SELECT * FROM employee WHERE 1";
			Connection con = DBInfo.getConnection();
			PreparedStatement preparedStatement = (PreparedStatement) con.prepareStatement(sql);

			ResultSet resultSet = preparedStatement.executeQuery();

			while (resultSet.next()) {

				Employee emp = new Employee();

				emp.setId(resultSet.getInt(1));
				emp.setFname(resultSet.getString(2));
				emp.setLname(resultSet.getString(3));
				emp.setSalary(resultSet.getFloat(4));
				emp.setAge(resultSet.getInt(5));
				emp.setDepartment(resultSet.getString(6));
				emp.setAddress(resultSet.getString(7));
				emp.setDate_of_birth(resultSet.getString(8));
				emp.setGender(resultSet.getString(9));
				emp.setEducation(resultSet.getString(10));
				emp.setContract_start(resultSet.getString(11)); 
				emp.setContract_end(resultSet.getString(12));
				emp.setNationality(resultSet.getString(13));
				list.add(emp);

			}

			con.close();

		} catch (SQLException e) {

			e.printStackTrace();
		}
		return list;

	}

}
